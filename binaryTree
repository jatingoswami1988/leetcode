Binary Tree Notes:-

1)Diameter of BT is Math.max(height(root.left)+height(root.right),Math.max(diameter(root.left),diameter(root.right)) --> Viveka youtube

Return max of following three
          1) Diameter of left subtree
          2) Diameter of right subtree
          3) Height of left subtree + height of right subtree + 1
https://www.youtube.com/watch?v=ey7DYc9OANo&t=436s

2)Left and Right view  use this solution :-  https://leetcode.com/problems/binary-tree-right-side-view/submissions/

3)A height balanced binary tree is a binary tree in which the height of the left subtree and right subtree of any 
node does not differ by more than 1 and both the left and right subtree are also height balanced.
https://www.geeksforgeeks.org/how-to-determine-if-a-binary-tree-is-balanced/




Binary Search Tree :-

Check if Tree is BST or not -> https://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/
For each node, check if max value in left subtree is smaller than the node and min value in right subtree greater than the node. 

Balanced BST = AVL or Red/Black Tree

https://leetcode.com/problems/validate-binary-search-tree/submissions/ -->> Validation of BST

https://leetcode.com/problems/two-sum-iv-input-is-a-bst/discuss/106059/JavaC%2B%2B-Three-simple-methods-choose-one-you-like --> Pair sum in BST , 
Always send a list in the parameter instead of declaring static key words.

https://leetcode.com/problems/univalued-binary-tree/submissions/ >> Solution is important.

Check if a given Binary Tree is a Heap - It should be a complete tree (i.e. all levels except the last should be full).
                                         Every nodeâ€™s value should be greater than or equal to its child node (considering max-heap).
         
         
